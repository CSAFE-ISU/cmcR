dx = ifelse(comparison == "comparison_1to2",dx,-dx),
dy = ifelse(comparison == "comparison_1to2",dy,-dy)) %>%
left_join(kmCMC$finalCMCs %>%
pmap_dfr(~ {
idNum <- ..2 %>%
str_extract_all(string = ..2,
pattern = "[0-9]{1,}") %>%
unlist() %>%
as.numeric()
data.frame(cellID = ..2,
firstRow = idNum[1],
lastRow = idNum[2],
firstCol = idNum[3],
lastCol = idNum[4],stringsAsFactors = FALSE)
}),
by = "cellID") %>%
mutate(firstRow = 6.25*(firstRow + dy),
lastRow = 6.25*(lastRow + dy),
firstCol = 6.25*(firstCol + dx),
lastCol = 6.25*(lastCol + dx)) %>%
mutate(firstRowCentered = -(lastRow - firstRow)/2,
lastRowCentered = lastRow - firstRow - (lastRow - firstRow)/2,
firstColCentered = -(lastCol - firstCol)/2,
lastColCentered = lastCol - firstCol - (lastRow - firstRow)/2) %>%
mutate(bottomLeftCorner_col = firstColCentered*cos(theta*(pi/180)) - firstRowCentered*sin(theta*(pi/180)) + firstCol + (lastCol - firstCol)/2,
bottomLeftCorner_row = firstColCentered*sin(theta*(pi/180)) + firstRowCentered*cos(theta*(pi/180)) + firstRow + (lastRow - firstRow)/2,
topRightCorner_col = lastColCentered*cos(theta*(pi/180)) - lastRowCentered*sin(theta*(pi/180)) + firstCol + (lastCol - firstCol)/2,
topRightCorner_row = lastColCentered*sin(theta*(pi/180)) + lastRowCentered*cos(theta*(pi/180)) + firstRow + (lastRow - firstRow)/2) %>%
mutate(midCol = (topRightCorner_col + bottomLeftCorner_col)/2,
midRow = (topRightCorner_row + bottomLeftCorner_row)/2) %>%
ggplot() +
geom_raster(data = {
tmp <- fadul1.2$x3p
tmp$surface.matrix <- cmcR:::rotateSurfaceMatrix(fadul1.2$x3p$surface.matrix,theta = -24)
tmp %>%
x3p_to_df() %>%
rename(height = value) %>%
mutate(x = 1e6*(x),
y = 1e6*(y),
height = 1e6*height)},
aes(x = x,y = y,fill = height),interpolate = TRUE) +
geom_spoke(aes(x = bottomLeftCorner_col,y = bottomLeftCorner_row,angle = theta*(pi/180),radius = lastRow - firstRow)) +
geom_spoke(aes(x = bottomLeftCorner_col,y = bottomLeftCorner_row,angle = (pi/2 + theta*(pi/180)),radius = lastCol - firstCol)) +
geom_spoke(aes(x = topRightCorner_col,y = topRightCorner_row,angle = (pi + theta*(pi/180)),radius = lastCol - firstCol)) +
geom_spoke(aes(x = topRightCorner_col,y = topRightCorner_row,angle = (3*pi/2 + theta*(pi/180)),radius = lastRow - firstRow))  +
geom_text(aes(x = midCol,
y = midRow,
label = paste0("B",cellNum),
angle = theta)) +
scale_fill_gradient2(low = "#1a6bff",
mid = "grey75",
high = "#ffae1a",
midpoint = median(as.vector(fadul1.2$x3p$surface.matrix),
na.rm = TRUE),
na.value = "white") +
theme_bw() +
guides(fill = guide_colourbar(barheight = 18)) +
labs(fill = expression("Height ["*mu*"m]")) +
coord_fixed(expand = FALSE) +
ylab(expression("Y-Position ["*mu*"m]")) +
xlab(expression("X-Position ["*mu*"m]"))
kmCMC$finalCMCs %>%
mutate(theta = ifelse(comparison == "comparison_1to2",theta,-theta),
dx = ifelse(comparison == "comparison_1to2",dx,-dx),
dy = ifelse(comparison == "comparison_1to2",dy,-dy)) %>%
left_join(kmCMC$finalCMCs %>%
pmap_dfr(~ {
idNum <- ..2 %>%
str_extract_all(string = ..2,
pattern = "[0-9]{1,}") %>%
unlist() %>%
as.numeric()
data.frame(cellID = ..2,
firstRow = idNum[1],
lastRow = idNum[2],
firstCol = idNum[3],
lastCol = idNum[4],stringsAsFactors = FALSE)
}),
by = "cellID") %>%
mutate(firstRow = 6.25*(firstRow),
lastRow = 6.25*(lastRow),
firstCol = 6.25*(firstCol),
lastCol = 6.25*(lastCol)) %>%
mutate(midCol = (lastCol + firstCol)/2,
midRow = (lastRow + firstRow)/2) %>%
ggplot() +
geom_raster(data = {
tmp <- fadul1.1$x3p
tmp$surface.matrix <- cmcR:::rotateSurfaceMatrix(fadul1.1$x3p$surface.matrix,theta = -24)
tmp %>%
x3p_to_df() %>%
rename(height = value) %>%
mutate(x = 1e6*(x),
y = 1e6*(y),
height = 1e6*height)},
aes(x = x,y = y,fill = height),interpolate = TRUE) +
geom_spoke(aes(x = firstCol,y = firstRow,angle = 0,radius = lastRow - firstRow)) +
geom_spoke(aes(x = firstCol,y = firstRow,angle = pi/2,radius = lastCol - firstCol)) +
geom_spoke(aes(x = lastCol,y = lastRow,angle = pi,radius = lastCol - firstCol)) +
geom_spoke(aes(x = lastCol,y = firstCol,angle = 3*pi/2,radius = lastRow - firstRow))  +
geom_text(aes(x = midCol,
y = midRow,
label = paste0("A",cellNum))) +
scale_fill_gradient2(low = "#1a6bff",
mid = "grey75",
high = "#ffae1a",
midpoint = median(as.vector(fadul1.1$x3p$surface.matrix),
na.rm = TRUE),
na.value = "white") +
theme_bw() +
guides(fill = guide_colourbar(barheight = 18)) +
labs(fill = expression("Height ["*mu*"m]")) +
coord_fixed(expand = FALSE) +
ylab(expression("Y-Position ["*mu*"m]")) +
xlab(expression("X-Position ["*mu*"m]"))
data.frame(cellID = ..2,
firstRow = idNum[1],
lastRow = idNum[2],
firstCol = idNum[3],
lastCol = idNum[4],stringsAsFactors = FALSE)
kmCMC$finalCMCs %>%
mutate(theta = ifelse(comparison == "comparison_1to2",theta,-theta),
dx = ifelse(comparison == "comparison_1to2",dx,-dx),
dy = ifelse(comparison == "comparison_1to2",dy,-dy)) %>%
left_join(kmCMC$finalCMCs %>%
pmap_dfr(~ {
idNum <- ..2 %>%
str_extract_all(string = ..2,
pattern = "[0-9]{1,}") %>%
unlist() %>%
as.numeric()
data.frame(cellID = ..2,
firstRow = idNum[1],
lastRow = idNum[2],
firstCol = idNum[3],
lastCol = idNum[4],stringsAsFactors = FALSE)
}),
by = "cellID") %>%
mutate(firstRow = 6.25*(firstRow),
lastRow = 6.25*(lastRow),
firstCol = 6.25*(firstCol),
lastCol = 6.25*(lastCol)) %>%
mutate(midCol = (lastCol + firstCol)/2,
midRow = (lastRow + firstRow)/2) %>%
ggplot() +
geom_raster(data = {
tmp <- fadul1.1$x3p
tmp$surface.matrix <- cmcR:::rotateSurfaceMatrix(fadul1.1$x3p$surface.matrix,theta = -24)
tmp %>%
x3p_to_df() %>%
rename(height = value) %>%
mutate(x = 1e6*(x),
y = 1e6*(y),
height = 1e6*height)},
aes(x = x,y = y,fill = height),interpolate = TRUE) +
geom_spoke(aes(x = firstCol,y = firstRow,angle = 0,radius = lastRow - firstRow)) +
geom_spoke(aes(x = firstCol,y = firstRow,angle = pi/2,radius = lastCol - firstCol)) +
geom_spoke(aes(x = lastCol,y = lastRow,angle = pi,radius = lastCol - firstCol)) +
geom_spoke(aes(x = lastCol,y = lastCol,angle = 3*pi/2,radius = lastRow - firstRow))  +
geom_text(aes(x = midCol,
y = midRow,
label = paste0("A",cellNum))) +
scale_fill_gradient2(low = "#1a6bff",
mid = "grey75",
high = "#ffae1a",
midpoint = median(as.vector(fadul1.1$x3p$surface.matrix),
na.rm = TRUE),
na.value = "white") +
theme_bw() +
guides(fill = guide_colourbar(barheight = 18)) +
labs(fill = expression("Height ["*mu*"m]")) +
coord_fixed(expand = FALSE) +
ylab(expression("Y-Position ["*mu*"m]")) +
xlab(expression("X-Position ["*mu*"m]"))
kmCMC$finalCMCs %>%
mutate(theta = ifelse(comparison == "comparison_1to2",theta,-theta),
dx = ifelse(comparison == "comparison_1to2",dx,-dx),
dy = ifelse(comparison == "comparison_1to2",dy,-dy)) %>%
left_join(kmCMC$finalCMCs %>%
pmap_dfr(~ {
idNum <- ..2 %>%
str_extract_all(string = ..2,
pattern = "[0-9]{1,}") %>%
unlist() %>%
as.numeric()
data.frame(cellID = ..2,
firstRow = idNum[1],
lastRow = idNum[2],
firstCol = idNum[3],
lastCol = idNum[4],stringsAsFactors = FALSE)
}),
by = "cellID") %>%
mutate(firstRow = 6.25*(firstRow),
lastRow = 6.25*(lastRow),
firstCol = 6.25*(firstCol),
lastCol = 6.25*(lastCol)) %>%
mutate(midCol = (lastCol + firstCol)/2,
midRow = (lastRow + firstRow)/2) %>%
ggplot() +
geom_raster(data = {
tmp <- fadul1.1$x3p
tmp$surface.matrix <- cmcR:::rotateSurfaceMatrix(fadul1.1$x3p$surface.matrix,theta = -24)
tmp %>%
x3p_to_df() %>%
rename(height = value) %>%
mutate(x = 1e6*(x),
y = 1e6*(y),
height = 1e6*height)},
aes(x = x,y = y,fill = height),interpolate = TRUE) +
geom_spoke(aes(x = firstCol,y = firstRow,angle = 0,radius = lastRow - firstRow)) +
geom_spoke(aes(x = firstCol,y = firstRow,angle = pi/2,radius = lastCol - firstCol)) +
geom_spoke(aes(x = lastCol,y = lastRow,angle = pi,radius = lastCol - firstCol)) +
geom_spoke(aes(x = lastCol,y = lastRow,angle = 3*pi/2,radius = lastRow - firstRow))  +
geom_text(aes(x = midCol,
y = midRow,
label = paste0("A",cellNum))) +
scale_fill_gradient2(low = "#1a6bff",
mid = "grey75",
high = "#ffae1a",
midpoint = median(as.vector(fadul1.1$x3p$surface.matrix),
na.rm = TRUE),
na.value = "white") +
theme_bw() +
guides(fill = guide_colourbar(barheight = 18)) +
labs(fill = expression("Height ["*mu*"m]")) +
coord_fixed(expand = FALSE) +
ylab(expression("Y-Position ["*mu*"m]")) +
xlab(expression("X-Position ["*mu*"m]"))
kmCMC$finalCMCs %>%
mutate(theta = ifelse(comparison == "comparison_1to2",theta,-theta),
dx = ifelse(comparison == "comparison_1to2",dx,-dx),
dy = ifelse(comparison == "comparison_1to2",dy,-dy)) %>%
left_join(kmCMC$finalCMCs %>%
pmap_dfr(~ {
idNum <- ..2 %>%
str_extract_all(string = ..2,
pattern = "[0-9]{1,}") %>%
unlist() %>%
as.numeric()
data.frame(cellID = ..2,
firstRow = idNum[1],
lastRow = idNum[2],
firstCol = idNum[3],
lastCol = idNum[4],stringsAsFactors = FALSE)
}),
by = "cellID") %>%
mutate(firstRow = 6.25*(firstRow),
lastRow = 6.25*(lastRow),
firstCol = 6.25*(firstCol),
lastCol = 6.25*(lastCol)) %>%
mutate(midCol = (lastCol + firstCol)/2,
midRow = (lastRow + firstRow)/2) %>%
ggplot() +
geom_raster(data = {
tmp <- fadul1.1$x3p
tmp$surface.matrix <- cmcR:::rotateSurfaceMatrix(fadul1.1$x3p$surface.matrix)
tmp %>%
x3p_to_df() %>%
rename(height = value) %>%
mutate(x = 1e6*(x),
y = 1e6*(y),
height = 1e6*height)},
aes(x = x,y = y,fill = height),interpolate = TRUE) +
geom_spoke(aes(x = firstCol,y = firstRow,angle = 0,radius = lastRow - firstRow)) +
geom_spoke(aes(x = firstCol,y = firstRow,angle = pi/2,radius = lastCol - firstCol)) +
geom_spoke(aes(x = lastCol,y = lastRow,angle = pi,radius = lastCol - firstCol)) +
geom_spoke(aes(x = lastCol,y = lastRow,angle = 3*pi/2,radius = lastRow - firstRow))  +
geom_text(aes(x = midCol,
y = midRow,
label = paste0("A",cellNum))) +
scale_fill_gradient2(low = "#1a6bff",
mid = "grey75",
high = "#ffae1a",
midpoint = median(as.vector(fadul1.1$x3p$surface.matrix),
na.rm = TRUE),
na.value = "white") +
theme_bw() +
guides(fill = guide_colourbar(barheight = 18)) +
labs(fill = expression("Height ["*mu*"m]")) +
coord_fixed(expand = FALSE) +
ylab(expression("Y-Position ["*mu*"m]")) +
xlab(expression("X-Position ["*mu*"m]"))
kmCMC$finalCMCs %>%
mutate(theta = ifelse(comparison == "comparison_1to2",theta,-theta),
dx = ifelse(comparison == "comparison_1to2",dx,-dx),
dy = ifelse(comparison == "comparison_1to2",dy,-dy)) %>%
left_join(kmCMC$finalCMCs %>%
pmap_dfr(~ {
idNum <- ..2 %>%
str_extract_all(string = ..2,
pattern = "[0-9]{1,}") %>%
unlist() %>%
as.numeric()
data.frame(cellID = ..2,
firstRow = idNum[1],
lastRow = idNum[2],
firstCol = idNum[3],
lastCol = idNum[4],stringsAsFactors = FALSE)
}),
by = "cellID") %>%
mutate(firstRow = 6.25*(firstRow + dy),
lastRow = 6.25*(lastRow + dy),
firstCol = 6.25*(firstCol + dx),
lastCol = 6.25*(lastCol + dx)) %>%
mutate(firstRowCentered = -(lastRow - firstRow)/2,
lastRowCentered = lastRow - firstRow - (lastRow - firstRow)/2,
firstColCentered = -(lastCol - firstCol)/2,
lastColCentered = lastCol - firstCol - (lastRow - firstRow)/2) %>%
mutate(bottomLeftCorner_col = firstColCentered*cos(theta*(pi/180)) - firstRowCentered*sin(theta*(pi/180)) + firstCol + (lastCol - firstCol)/2,
bottomLeftCorner_row = firstColCentered*sin(theta*(pi/180)) + firstRowCentered*cos(theta*(pi/180)) + firstRow + (lastRow - firstRow)/2,
topRightCorner_col = lastColCentered*cos(theta*(pi/180)) - lastRowCentered*sin(theta*(pi/180)) + firstCol + (lastCol - firstCol)/2,
topRightCorner_row = lastColCentered*sin(theta*(pi/180)) + lastRowCentered*cos(theta*(pi/180)) + firstRow + (lastRow - firstRow)/2) %>%
mutate(midCol = (topRightCorner_col + bottomLeftCorner_col)/2,
midRow = (topRightCorner_row + bottomLeftCorner_row)/2) %>%
ggplot() +
geom_raster(data = {
tmp <- fadul1.2$x3p
tmp$surface.matrix <- cmcR:::rotateSurfaceMatrix(fadul1.2$x3p$surface.matrix,theta = 24)
tmp %>%
x3p_to_df() %>%
rename(height = value) %>%
mutate(x = 1e6*(x),
y = 1e6*(y),
height = 1e6*height)},
aes(x = x,y = y,fill = height),interpolate = TRUE) +
geom_spoke(aes(x = bottomLeftCorner_col,y = bottomLeftCorner_row,angle = theta*(pi/180),radius = lastRow - firstRow)) +
geom_spoke(aes(x = bottomLeftCorner_col,y = bottomLeftCorner_row,angle = (pi/2 + theta*(pi/180)),radius = lastCol - firstCol)) +
geom_spoke(aes(x = topRightCorner_col,y = topRightCorner_row,angle = (pi + theta*(pi/180)),radius = lastCol - firstCol)) +
geom_spoke(aes(x = topRightCorner_col,y = topRightCorner_row,angle = (3*pi/2 + theta*(pi/180)),radius = lastRow - firstRow))  +
geom_text(aes(x = midCol,
y = midRow,
label = paste0("B",cellNum),
angle = theta)) +
scale_fill_gradient2(low = "#1a6bff",
mid = "grey75",
high = "#ffae1a",
midpoint = median(as.vector(fadul1.2$x3p$surface.matrix),
na.rm = TRUE),
na.value = "white") +
theme_bw() +
guides(fill = guide_colourbar(barheight = 18)) +
labs(fill = expression("Height ["*mu*"m]")) +
coord_fixed(expand = FALSE) +
ylab(expression("Y-Position ["*mu*"m]")) +
xlab(expression("X-Position ["*mu*"m]"))
kmCMC$finalCMCs %>%
mutate(theta = ifelse(comparison == "comparison_1to2",theta,-theta),
dx = ifelse(comparison == "comparison_1to2",dx,-dx),
dy = ifelse(comparison == "comparison_1to2",dy,-dy)) %>%
left_join(kmCMC$finalCMCs %>%
pmap_dfr(~ {
idNum <- ..2 %>%
str_extract_all(string = ..2,
pattern = "[0-9]{1,}") %>%
unlist() %>%
as.numeric()
data.frame(cellID = ..2,
firstRow = idNum[1],
lastRow = idNum[2],
firstCol = idNum[3],
lastCol = idNum[4],stringsAsFactors = FALSE)
}),
by = "cellID") %>%
mutate(firstRow = 6.25*(firstRow + dy),
lastRow = 6.25*(lastRow + dy),
firstCol = 6.25*(firstCol + dx),
lastCol = 6.25*(lastCol + dx)) %>%
mutate(firstRowCentered = -(lastRow - firstRow)/2,
lastRowCentered = lastRow - firstRow - (lastRow - firstRow)/2,
firstColCentered = -(lastCol - firstCol)/2,
lastColCentered = lastCol - firstCol - (lastRow - firstRow)/2) %>%
mutate(bottomLeftCorner_col = firstColCentered*cos(theta*(pi/180)) - firstRowCentered*sin(theta*(pi/180)) + firstCol + (lastCol - firstCol)/2,
bottomLeftCorner_row = firstColCentered*sin(theta*(pi/180)) + firstRowCentered*cos(theta*(pi/180)) + firstRow + (lastRow - firstRow)/2,
topRightCorner_col = lastColCentered*cos(theta*(pi/180)) - lastRowCentered*sin(theta*(pi/180)) + firstCol + (lastCol - firstCol)/2,
topRightCorner_row = lastColCentered*sin(theta*(pi/180)) + lastRowCentered*cos(theta*(pi/180)) + firstRow + (lastRow - firstRow)/2) %>%
mutate(midCol = (topRightCorner_col + bottomLeftCorner_col)/2,
midRow = (topRightCorner_row + bottomLeftCorner_row)/2) %>%
ggplot() +
geom_raster(data = {
tmp <- fadul1.2$x3p
tmp$surface.matrix <- cmcR:::rotateSurfaceMatrix(fadul1.2$x3p$surface.matrix,theta = -24)
tmp %>%
x3p_to_df() %>%
rename(height = value) %>%
mutate(x = 1e6*(x),
y = 1e6*(y),
height = 1e6*height)},
aes(x = x,y = y,fill = height),interpolate = TRUE) +
geom_spoke(aes(x = bottomLeftCorner_col,y = bottomLeftCorner_row,angle = theta*(pi/180),radius = lastRow - firstRow)) +
geom_spoke(aes(x = bottomLeftCorner_col,y = bottomLeftCorner_row,angle = (pi/2 + theta*(pi/180)),radius = lastCol - firstCol)) +
geom_spoke(aes(x = topRightCorner_col,y = topRightCorner_row,angle = (pi + theta*(pi/180)),radius = lastCol - firstCol)) +
geom_spoke(aes(x = topRightCorner_col,y = topRightCorner_row,angle = (3*pi/2 + theta*(pi/180)),radius = lastRow - firstRow))  +
geom_text(aes(x = midCol,
y = midRow,
label = paste0("B",cellNum),
angle = theta)) +
scale_fill_gradient2(low = "#1a6bff",
mid = "grey75",
high = "#ffae1a",
midpoint = median(as.vector(fadul1.2$x3p$surface.matrix),
na.rm = TRUE),
na.value = "white") +
theme_bw() +
guides(fill = guide_colourbar(barheight = 18)) +
labs(fill = expression("Height ["*mu*"m]")) +
coord_fixed(expand = FALSE) +
ylab(expression("Y-Position ["*mu*"m]")) +
xlab(expression("X-Position ["*mu*"m]"))
kmCMC$finalCMCs %>%
mutate(theta = ifelse(comparison == "comparison_1to2",theta,-theta),
dx = ifelse(comparison == "comparison_1to2",dx,-dx),
dy = ifelse(comparison == "comparison_1to2",dy,-dy)) %>%
left_join(kmCMC$finalCMCs %>%
pmap_dfr(~ {
idNum <- ..2 %>%
str_extract_all(string = ..2,
pattern = "[0-9]{1,}") %>%
unlist() %>%
as.numeric()
data.frame(cellID = ..2,
firstRow = idNum[1],
lastRow = idNum[2],
firstCol = idNum[3],
lastCol = idNum[4],stringsAsFactors = FALSE)
}),
by = "cellID") %>%
mutate(firstRow = 6.25*(firstRow + dy),
lastRow = 6.25*(lastRow + dy),
firstCol = 6.25*(firstCol + dx),
lastCol = 6.25*(lastCol + dx)) %>%
mutate(firstRowCentered = -(lastRow - firstRow)/2,
lastRowCentered = lastRow - firstRow - (lastRow - firstRow)/2,
firstColCentered = -(lastCol - firstCol)/2,
lastColCentered = lastCol - firstCol - (lastRow - firstRow)/2) %>%
mutate(bottomLeftCorner_col = firstColCentered*cos(theta*(pi/180)) - firstRowCentered*sin(theta*(pi/180)) + firstCol + (lastCol - firstCol)/2,
bottomLeftCorner_row = firstColCentered*sin(theta*(pi/180)) + firstRowCentered*cos(theta*(pi/180)) + firstRow + (lastRow - firstRow)/2,
topRightCorner_col = lastColCentered*cos(theta*(pi/180)) - lastRowCentered*sin(theta*(pi/180)) + firstCol + (lastCol - firstCol)/2,
topRightCorner_row = lastColCentered*sin(theta*(pi/180)) + lastRowCentered*cos(theta*(pi/180)) + firstRow + (lastRow - firstRow)/2) %>%
mutate(midCol = (topRightCorner_col + bottomLeftCorner_col)/2,
midRow = (topRightCorner_row + bottomLeftCorner_row)/2) %>%
ggplot() +
geom_raster(data = {
tmp <- fadul1.2$x3p
tmp$surface.matrix <- cmcR:::rotateSurfaceMatrix(fadul1.2$x3p$surface.matrix,theta = -21)
tmp %>%
x3p_to_df() %>%
rename(height = value) %>%
mutate(x = 1e6*(x),
y = 1e6*(y),
height = 1e6*height)},
aes(x = x,y = y,fill = height),interpolate = TRUE) +
geom_spoke(aes(x = bottomLeftCorner_col,y = bottomLeftCorner_row,angle = theta*(pi/180),radius = lastRow - firstRow)) +
geom_spoke(aes(x = bottomLeftCorner_col,y = bottomLeftCorner_row,angle = (pi/2 + theta*(pi/180)),radius = lastCol - firstCol)) +
geom_spoke(aes(x = topRightCorner_col,y = topRightCorner_row,angle = (pi + theta*(pi/180)),radius = lastCol - firstCol)) +
geom_spoke(aes(x = topRightCorner_col,y = topRightCorner_row,angle = (3*pi/2 + theta*(pi/180)),radius = lastRow - firstRow))  +
geom_text(aes(x = midCol,
y = midRow,
label = paste0("B",cellNum),
angle = theta)) +
scale_fill_gradient2(low = "#1a6bff",
mid = "grey75",
high = "#ffae1a",
midpoint = median(as.vector(fadul1.2$x3p$surface.matrix),
na.rm = TRUE),
na.value = "white") +
theme_bw() +
guides(fill = guide_colourbar(barheight = 18)) +
labs(fill = expression("Height ["*mu*"m]")) +
coord_fixed(expand = FALSE) +
ylab(expression("Y-Position ["*mu*"m]")) +
xlab(expression("X-Position ["*mu*"m]"))
kmCMC$finalCMCs
library(cmcR)
kmCellRegionPairs[[1]]
cmcR::ccfMapPlot(kmCellRegionPairs[[1]])
cmcR::ccfMapPlot(mat1 = kmCellRegionPairs[[1]]$`x = 167 - 248,y = 497 - 578`,mat1 = kmCellRegionPairs[[2]]$`x = 1 - 83,y = 332 - 413`)
kmCellRegionPairs$`15`$`x = 84 - 166,y = 84 - 166`
kmCellRegionPairs$`15`$`x = 84 - 166,y = 84 - 166` %>% length()
ccfMapPlot(mat1 = kmCellRegionPairs$`15`$`x = 84 - 166,y = 84 - 166`[[1]],mat2 = kmCellRegionPairs$`15`$`x = 84 - 166,y = 84 - 166`[[2]])
library(cmcR)
library(tidyverse)
library(x3ptools)
set.seed(4132020)
fadul1.1 <- cmcR::selectBFImpression_sample_x3p("https://tsapps.nist.gov/NRBTD/Studies/CartridgeMeasurement/DownloadMeasurement/2d9cc51f-6f66-40a0-973a-a9292dbee36d")
fadul1.2 <- cmcR::selectBFImpression_sample_x3p("https://tsapps.nist.gov/NRBTD/Studies/CartridgeMeasurement/DownloadMeasurement/cb296c98-39f5-46eb-abff-320a2f5568e8")
fadul2.1 <- cmcR::selectBFImpression_sample_x3p("https://tsapps.nist.gov/NRBTD/Studies/CartridgeMeasurement/DownloadMeasurement/8ae0b86d-210a-41fd-ad75-8212f9522f96")
ccfMapPlot(mat1 = kmCellRegionPairs$`15`$`x = 84 - 166,y = 84 - 166`[[1]],mat2 = kmCellRegionPairs$`15`$`x = 84 - 166,y = 84 - 166`[[2]])
library(cmcR)
library(cmcR)
library(tidyverse)
library(x3ptools)
set.seed(4132020)
fadul1.1 <- cmcR::selectBFImpression_sample_x3p("https://tsapps.nist.gov/NRBTD/Studies/CartridgeMeasurement/DownloadMeasurement/2d9cc51f-6f66-40a0-973a-a9292dbee36d")
ccfMapPlot(mat1 = kmCellRegionPairs$`15`$`x = 84 - 166,y = 84 - 166`[[1]],mat2 = kmCellRegionPairs$`15`$`x = 84 - 166,y = 84 - 166`[[2]])
?ggplot2::geom_contour
install.packages(c("AsioHeaders", "backports", "bibtex", "bigassertr", "bigstatsr", "bookdown", "broom", "Cairo", "callr", "car", "caret", "checkmate", "cli", "covr", "crosstalk", "data.table", "DBI", "dbplyr", "DescTools", "devtools", "digest", "dplyr", "DT", "fansi", "farver", "fftw", "forcats", "foreach", "forecast", "fracdiff", "fs", "GGally", "gganimate", "ggplot2", "ggrepel", "gh", "glue", "graphlayouts", "gtools", "hexbin", "hms", "igraph", "imager", "jsonlite", "knitr", "lava", "lifecycle", "lme4", "locfit", "loo", "lubridate", "magick", "manipulateWidget", "matrixStats", "mime", "ModelMetrics", "modelr", "Morpho", "mvtnorm", "nloptr", "pagedown", "pillar", "pkgbuild", "pkgdown", "plotly", "plyr", "prettyunits", "pROC", "processx", "ps", "purrr", "quantmod", "quantreg", "raster", "Rcpp", "RcppArmadillo", "RCurl", "Rdpack", "recipes", "rematch2", "remotes", "reshape2", "rex", "rgl", "rJava", "rlang", "rmarkdown", "roxygen2", "rstan", "rstudioapi", "rticles", "Rvcg", "scales", "servr", "shiny", "SQUAREM", "StanHeaders", "statmod", "stringi", "testthat", "tibble", "tidyr", "tidyselect", "tinytex", "TTR", "usethis", "vctrs", "withr", "xaringan", "xfun", "xml2", "xts", "yaml", "zoo"))
install.packages(c("AsioHeaders", "backports", "bibtex", "bigassertr", "bigstatsr", "bookdown", "broom", "Cairo", "callr", "car", "caret", "checkmate", "cli", "covr", "crosstalk", "data.table", "DBI", "dbplyr", "DescTools", "devtools", "digest", "dplyr", "DT", "fansi", "farver", "fftw", "forcats", "foreach", "forecast", "fracdiff", "fs", "GGally", "gganimate", "ggplot2", "ggrepel", "gh", "glue", "graphlayouts", "gtools", "hexbin", "hms", "igraph", "imager", "jsonlite", "knitr", "lava", "lifecycle", "lme4", "locfit", "loo", "lubridate", "magick", "manipulateWidget", "matrixStats", "mime", "ModelMetrics", "modelr", "Morpho", "mvtnorm", "nloptr", "pagedown", "pillar", "pkgbuild", "pkgdown", "plotly", "plyr", "prettyunits", "pROC", "processx", "ps", "purrr", "quantmod", "quantreg", "raster", "Rcpp", "RcppArmadillo", "RCurl", "Rdpack", "recipes", "rematch2", "remotes", "reshape2", "rex", "rgl", "rJava", "rlang", "rmarkdown", "roxygen2", "rstan", "rstudioapi", "rticles", "Rvcg", "scales", "servr", "shiny", "SQUAREM", "StanHeaders", "statmod", "stringi", "testthat", "tibble", "tidyr", "tidyselect", "tinytex", "TTR", "usethis", "vctrs", "withr", "xaringan", "xfun", "xml2", "xts", "yaml", "zoo"))
install.packages(c("AsioHeaders", "backports", "bibtex", "bigassertr", "bigstatsr", "bookdown", "broom", "Cairo", "callr", "car", "caret", "checkmate", "cli", "covr", "crosstalk", "data.table", "DBI", "dbplyr", "DescTools", "devtools", "digest", "dplyr", "DT", "fansi", "farver", "fftw", "forcats", "foreach", "forecast", "fracdiff", "fs", "GGally", "gganimate", "ggplot2", "ggrepel", "gh", "glue", "graphlayouts", "gtools", "hexbin", "hms", "igraph", "imager", "jsonlite", "knitr", "lava", "lifecycle", "lme4", "locfit", "loo", "lubridate", "magick", "manipulateWidget", "matrixStats", "mime", "ModelMetrics", "modelr", "Morpho", "mvtnorm", "nloptr", "pagedown", "pillar", "pkgbuild", "pkgdown", "plotly", "plyr", "prettyunits", "pROC", "processx", "ps", "purrr", "quantmod", "quantreg", "raster", "Rcpp", "RcppArmadillo", "RCurl", "Rdpack", "recipes", "rematch2", "remotes", "reshape2", "rex", "rgl", "rJava", "rlang", "rmarkdown", "roxygen2", "rstan", "rstudioapi", "rticles", "Rvcg", "scales", "servr", "shiny", "SQUAREM", "StanHeaders", "statmod", "stringi", "testthat", "tibble", "tidyr", "tidyselect", "tinytex", "TTR", "usethis", "vctrs", "withr", "xaringan", "xfun", "xml2", "xts", "yaml", "zoo"))
library(cmcR)
library(cmcR)
library(tidyverse)
library(cmcR)
library(tidyverse)
library(tidyverse)
library(tibble)
detach("package:tibble", unload = TRUE)
library(tidyverse)
library(tibble)
install.packages("tibble")
install.packages("tibble")
install.packages("tibble")
install.packages("tibble")
