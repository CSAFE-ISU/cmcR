% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cell_ccf.R
\name{cellCCF}
\alias{cellCCF}
\title{Calculates the cross-correlation function between cells in one matrix to
regions in another.}
\arguments{
\item{x3p1}{an x3p object containing the surface matrix of a cartridge case
scan}

\item{x3p2}{an x3p object containing the surface matrix of a cartridge case
scan to be compared to that in x3p1}

\item{thetas}{rotation values (in degrees) for which x3p2$surface.matrix will
be rotated, split into cells, and compared to x3p1$surface.matrix}

\item{cellNumHoriz}{number of cells along horizontal axis to divide
x3p1$surface.matrix into}

\item{cellNumVert}{number of cells along vertical axis to divide
x3p1$surface.matrix into}

\item{regionToCellProp}{determines how much larger the x3p2 regions will be
relative to the x3p1 cells. For example, if regionToCellProp = 4 means that
the x3p2 regions will be 4 times times larger (sidelengths multiplied by
2).}

\item{minObservedProp}{the minimum proportion of a cell that needs to contain
observed (i.e., non-NA) values for it to be included in the CCF calculation
procedure.}

\item{centerCell}{dictates if cell is to be shifted prior to CCF
calculation. Default is that no shifting is performed. If set to
"wholeMatrix", then each cell is subracted by the mean of the whole matrix.
If set to "individualCell", then each cell is subtracted by its particular
mean.}

\item{scaleCell}{dictates if cell is to be scaled prior to CCF calculation.
Default is that no scaling is performed. If set to "wholeMatrix", then each
cell is divided by the standard deviation of the whole matrix. If set to
"individualCell", then each cell is divided by its particular standard
deviation.}

\item{ccfMethod}{dictates which of 3 different methods are used to calculate
a final maximum cross-correlation estimate. "fft" estimates the
optimal translation values to align each cell within in its associated
region by using Cross-Correlation theorem + FFT algorithm and then
calculates the pairwise-complete correlation between the cell and a
cell-sized matrix extracted from the paired region. "imager" uses the
normalized imager::correlate function and uses the max CCF value
calculated. "bruteForceReweighted" calculates the pairwise-complete
correlation between a cell and every possible cell-sized matrix that could
be extracted from its paired region (and is thus computationally very
costly). For each cell/region pair, these correlation values are
re-weighted based on the number of non-missing values used to calculate
them by the following: nonMissingCount*cor/max(nonMissingCount).}

\item{rawCorrTieBreaker}{Only applicable if ccfMethod == "fft".
The way in which the CCF (see ccfMethod) is calculated may require slight
padding/cropping of the mat1-sized matrix extracted from mat2 to make their
dimensions equal (e.g., "center" of mat1-sized matrix in mat2 may be one of
4 pixels). This padding/cropping can occur to the initial or final
rows/cols in the matrix, without a clear way to determine which is
"correct." As such, all possible combinations of pre/post padding/cropping
are considered (only if necessary). To determine a final mat1-sized matrix,
rawCorrTieBreaker can be used to determine which yields the lowest/highest
correlation with mat1 (using rawCorrTieBreaker = which.min or which.max,
respectively).}

\item{use}{Only applicable if ccfMethod == "fft". argument to be
passed to the cor function. Dictates how NAs are dealt with in computing
the correlation.}
}
\value{
The list allResults contains the CCF values, horizontal, and vertical
translations calculated for each cell, for each rotation value. The data
frame topResults contains the CCF value, associated horizontal/vertical
translation, and rotation value at which each cell in mat1 achieved its
highest CCF with its paired cell in mat2.
}
\description{
This function performs a cell-based comparison of two cartridge
case scans as described in  'Proposed "Congruent Matching Cells (CMC)
Method for Ballistic Identification and Error Rate Estimation' by John Song
(2015). The method works by first dividing mat1, the surface matrix
representing the height values of a breech face impression microscopy scan,
into pairwise disjoint cells. mat2, the surface matrix of a breech face
impression scan to be compared to mat1, is also broken up into cells
centered at the same location as those in mat1. However, the cells in mat2
are larger than those in mat1 (typically 9 times the size except on the
border of mat2). See ccfMethod argument details for information regarding
how the CCF is calculated.

mat2 is then rotated by some amount (say, 3 degrees) and the process of
dividing mat2 into cells and calculating the max CCF for each cell in mat1
is repeated. The rotations performed on mat2 are dictated by the value(s)
passed to the theta argument.
}
\seealso{
\url{https://pdfs.semanticscholar.org/4bf3/0b3a23c38d8396fa5e0d116cba63a3681494.pdf}

cmcR::cmcFilter
}
